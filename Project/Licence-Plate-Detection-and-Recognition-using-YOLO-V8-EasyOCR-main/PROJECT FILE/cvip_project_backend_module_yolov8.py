# -*- coding: utf-8 -*-
"""CVIP project Backend Module-Yolov8

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GZ7QTAf6bXEDajuA-F1QV7KJ7s6CV6HJ

# **License Plate**
"""

!git clone https://github.com/KabirAhmad4/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR.git

cd /content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR

"""# **Data Set Importing from Roboflow**"""

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="4J5xTPyWhFzIDmPM291M")
project = rf.workspace("mochoye").project("license-plate-detector-ogxxg")
version = project.version(2)
dataset = version.download("yolov8")

pip install -r requirements.txt

!python /content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/ultralytics/yolo/v8/detect/train.py model=yolov8n.pt data=/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/License-Plate-Detector-2/data.yaml epochs=100

!python /content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/ultralytics/yolo/v8/detect/predict.py model='/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/runs/detect/train3/weights/best.pt' source='/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/demo.mp4'

"""# **License Plate Extraction**"""

!python predictWithOCR.py model='/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/best.pt' source='/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/demo.mp4'

!python predictWithOCR_new.py model='/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/best.pt' source='/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/demo.mp4'

"""# **More Checking**"""

!python predictWithOCR.py model='/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/best.pt' source='/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/ultralytics/check.mp4'

"""**for hard code**"""

!python predictWithOCR.py model='/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/best.pt' source='/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/ultralytics/sample.mp4'

"""# **Filtering the Data**"""

import pandas as pd

df= pd.read_csv('/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/runs/detect/train2/detected_plates.csv')
df.head(20)

import pandas as pd

# Read the CSV file
df = pd.read_csv('/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/runs/detect/train2/detected_plates.csv')

# Filter rows based on the specified format ([A-Z]-183-[A-Z]{2})
filtered_df = df[df['Plate Number'].str.match(r'[A-Z]-\d{3}-[A-Z]{2}')]

# Get unique plate numbers from the filtered DataFrame
unique_plate_numbers = filtered_df['Plate Number'].unique()

# Create a new DataFrame with unique plate numbers
new_df = pd.DataFrame({'Unique Plate Numbers': unique_plate_numbers})

# Save the new DataFrame to the same CSV file
new_df.to_csv('/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/runs/detect/train2/unique_plate_numbers.csv', index=False)

# Display unique plate numbers
print(unique_plate_numbers)

import pandas as pd

df= pd.read_csv('/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/runs/detect/train2/unique_plate_numbers.csv')
df.head(20)

"""# **Downloading the Files**"""

from google.colab import files

# csv download
files.download('/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/runs/detect/train2/detected_plates.csv')

files.download('/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/runs/detect/train2/unique_plate_numbers.csv')

"""# **Downloading the pre-processed Video**"""

# result video

!pip install moviepy

from moviepy.editor import VideoFileClip

# Input video file path
input_video_path = "/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/runs/detect/train/demo.mp4"

# Output video file path
output_video_path = "/content/Licence-Plate-Detection-and-Recognition-using-YOLO-V8-EasyOCR/runs/detect/train/demo+x.mp4"

# Load the video clip
clip = VideoFileClip(input_video_path)

# Convert the video to MP4 format
clip.write_videofile(output_video_path, codec="libx264", fps=24)

from  google.collab import files
files.download(output_video_path);